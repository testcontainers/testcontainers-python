name: testcontainers-python
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
        test-component:
          - core
          - clickhouse.py
          - elasticsearch.py
          - google.py
          - kafka.py
          - localstack.py
          - mongodb.py
          - neo4j.py
          - nginx.py
          - rabbitmq.py
          - redis.py
          - selenium.py
          - webdriver.py
          - keycloak.py
          - arangodb.py
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Setup python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache Python dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles(format('requirements/{0}.txt', matrix.python-version)) }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip install -r requirements/${{ matrix.python-version }}.txt
      - name: Run docker diagnostics
        run: |
          echo "Build minimal container for docker-in-docker diagnostics"
          docker build -f Dockerfile.diagnostics -t testcontainers-python .
          echo "Bare metal diagnostics"
          python diagnostics.py
          echo "Container diagnostics with bridge network"
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock --network=bridge testcontainers-python python diagnostics.py
          echo "Container diagnostics with host network"
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock --network=host testcontainers-python python diagnostics.py
      - name: Make docs
        if: matrix.python-version == '3.7'
        run: |
          sphinx-build -nW docs docs/_build/html
      - name: Run checks
        run: |
          flake8
          py.test -svx --cov-config .coveragerc --cov-report html:skip-covered --cov-report term:skip-covered --cov=testcontainers --tb=short tests/test_${{ matrix.test-component }}
          codecov
