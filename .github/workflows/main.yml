name: testcontainers packages
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    strategy:
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
        component:
          - arangodb
          - azurite
          - clickhouse
          - compose
          - core
          - elasticsearch
          - google
          - kafka
          - keycloak
          - localstack
          - meta
          - minio
          - mongodb
          - mssql
          - mysql
          - neo4j
          - nginx
          - opensearch
          - oracle
          - postgres
          - rabbitmq
          - redis
          - selenium
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: ${{ format('requirements/{0}.txt', matrix.python-version) }}
      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements/${{ matrix.python-version }}.txt
      - name: Run docker diagnostics
        if: matrix.component == 'core'
        run: |
          echo "Build minimal container for docker-in-docker diagnostics"
          docker build -f Dockerfile.diagnostics -t testcontainers-python .
          echo "Bare metal diagnostics"
          python diagnostics.py
          echo "Container diagnostics with bridge network"
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock --network=bridge testcontainers-python python diagnostics.py
          echo "Container diagnostics with host network"
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock --network=host testcontainers-python python diagnostics.py
      - name: Lint the code
        run: make ${{ matrix.component }}/lint
      - name: Run tests
        if: matrix.component != 'meta'
        run: make ${{ matrix.component }}/tests
      - name: Run doctests
        if: matrix.component != 'meta'
        run: make ${{ matrix.component }}/doctest
      - name: Build the package
        run: make ${{ matrix.component }}/dist
      - name: Upload the package to pypi
        if: >
          github.event_name == 'push'
          && github.ref == 'refs/heads/master'
          && github.repository_owner == 'testcontainers'
          && matrix.python-version == '3.10'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: make ${{ matrix.component }}/upload
